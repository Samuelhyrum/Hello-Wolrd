{"ast":null,"code":"var _jsxFileName = \"/home/samuelhyrum/Trybe/trybe-exercicios/front-end/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/fancy-buttons/src/App.js\";\nimport React from 'react';\nimport './App.css';\n/* Embora isso funcione, essa DEFINITIVAMENTE\nnão é a maneira correta de se criar eventos\nem React! A função se refere ao componente,\nentão deve ser parte de sua classe! */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction handleClick() {\n  console.log('Clicou no botão!');\n}\n\nfunction click2() {\n  console.log('Clicou no botão!');\n}\n\nfunction click3() {\n  console.log('Clicou no botão!');\n}\n\nclass App extends React.Component {\n  /* Repare que, diferentemente do HTML, no\n  JSX você associa uma função a um evento\n  passando a própria função entre chaves `{}` */\n  render() {\n    return;\n\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Meu bot\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), \"// \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: click2,\n        children: \"Segundo bot\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this), \"// \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","handleClick","console","log","click2","click3","App","Component","render"],"sources":["/home/samuelhyrum/Trybe/trybe-exercicios/front-end/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/fancy-buttons/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\n/* Embora isso funcione, essa DEFINITIVAMENTE\nnão é a maneira correta de se criar eventos\nem React! A função se refere ao componente,\nentão deve ser parte de sua classe! */\nfunction handleClick() {\n  console.log('Clicou no botão!')\n}\nfunction click2() {\n  console.log('Clicou no botão!')\n}\nfunction click3() {\n  console.log('Clicou no botão!')\n}\n\nclass App extends React.Component {\n  /* Repare que, diferentemente do HTML, no\n  JSX você associa uma função a um evento\n  passando a própria função entre chaves `{}` */\n  render() {\n    return\n    <div>\n      <button onClick={handleClick}>Meu botão</button>\n      // <button onClick={click2}>Segundo botão</button>\n    // </div>\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA;AACA;AACA;AACA;;;;AACA,SAASC,WAAT,GAAuB;EACrBC,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;;AACD,SAASC,MAAT,GAAkB;EAChBF,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;;AACD,SAASE,MAAT,GAAkB;EAChBH,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;;AAED,MAAMG,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;EAChC;AACF;AACA;EACEC,MAAM,GAAG;IACP;;IACA;IAAA;MAAA,wBACE;QAAQ,OAAO,EAAEP,WAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,sBAEK;QAAQ,OAAO,EAAEG,MAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFL;IAAA;MAAA;MAAA;MAAA;IAAA;EAID;;AAV+B;;AAalC,eAAeE,GAAf"},"metadata":{},"sourceType":"module"}