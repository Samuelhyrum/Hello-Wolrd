{"ast":null,"code":"var _jsxFileName = \"/home/samuelhyrum/Trybe/trybe-exercicios/front-end/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/fancy-buttons/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.Click = this.Click.bind(this);\n    this.handle = this.handle.bind(this);\n    this.state = {\n      numeroCliques: 0,\n      numero: 0,\n      num: 0\n    };\n  }\n\n  handleClick() {\n    this.setState((antigo, _props) => ({\n      numero: antigo.numero + 1\n    }));\n  }\n\n  Click() {\n    this.setState(_ref => {\n      let {\n        num\n      } = _ref;\n      return {\n        num: num + 1\n      };\n    });\n  }\n\n  handle() {\n    this.setState(_ref2 => {\n      let {\n        numeroCliques\n      } = _ref2;\n      return {\n        numeroCliques: numeroCliques + 1\n      };\n    });\n  }\n\n  getButtonColor(num) {\n    // Essa função contém um ternário que realiza a lógica para mudarmos\n    // a cor do botão para verde quando for um número par\n    return num % 2 === 0 ? 'green' : 'white';\n  }\n\n  render() {\n    const {\n      handle,\n      handleClick,\n      Click\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        style: {\n          backgroundColor: this.getButtonColor(handleClick)\n        },\n        children: [\" Bot\\xE3o 1| Count = \", numero]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.Click,\n        style: {\n          backgroundColor: this.getButtonColor(Click)\n        },\n        children: [\" Bot\\xE3o 2 | Count = \", num]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handle,\n        style: {\n          backgroundColor: this.getButtonColor(handle)\n        },\n        children: [\"Bot\\xE3o 3 | Count = \", numeroCliques]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","App","Component","constructor","handleClick","bind","Click","handle","state","numeroCliques","numero","num","setState","antigo","_props","getButtonColor","render","backgroundColor"],"sources":["/home/samuelhyrum/Trybe/trybe-exercicios/front-end/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/fancy-buttons/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n\n    this.handleClick = this.handleClick.bind(this)\n    this.Click = this.Click.bind(this)\n    this.handle = this.handle.bind(this)\n\n    this.state = {\n      numeroCliques: 0,\n      numero: 0,\n      num : 0\n    }\n\n  }\n\n  handleClick() {\n    this.setState((antigo, _props) => ({\n      numero: antigo.numero + 1\n    }))\n  }\n  Click() {\n    this.setState(({num}) => ({\n      num: num + 1\n    }))\n  }\n  handle() {\n    this.setState(({numeroCliques}) => ({\n      numeroCliques: numeroCliques + 1\n    }))\n  }\n\n  getButtonColor(num) {\n    // Essa função contém um ternário que realiza a lógica para mudarmos\n    // a cor do botão para verde quando for um número par\n    return num % 2 === 0 ? 'green' : 'white';\n  }\n\n\n  render() {\n    const {handle, handleClick, Click} = this.state;\n\n    return (\n      <div>\n        <button onClick={this.handleClick}\n        style={{backgroundColor: this.getButtonColor(handleClick)}}> Botão 1| Count = {numero}</button>\n        <button onClick={this.Click}\n        style={{backgroundColor:this.getButtonColor(Click)}}> Botão 2 | Count = {num}</button>\n        <button onClick={this.handle} style={{backgroundColor: this.getButtonColor(handle)}}>Botão 3 | Count = {numeroCliques}</button>\n\n      </div>\n    )\n  }\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;EAChCC,WAAW,GAAG;IACZ;IAEA,KAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;IACA,KAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWD,IAAX,CAAgB,IAAhB,CAAb;IACA,KAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;IAEA,KAAKG,KAAL,GAAa;MACXC,aAAa,EAAE,CADJ;MAEXC,MAAM,EAAE,CAFG;MAGXC,GAAG,EAAG;IAHK,CAAb;EAMD;;EAEDP,WAAW,GAAG;IACZ,KAAKQ,QAAL,CAAc,CAACC,MAAD,EAASC,MAAT,MAAqB;MACjCJ,MAAM,EAAEG,MAAM,CAACH,MAAP,GAAgB;IADS,CAArB,CAAd;EAGD;;EACDJ,KAAK,GAAG;IACN,KAAKM,QAAL,CAAc;MAAA,IAAC;QAACD;MAAD,CAAD;MAAA,OAAY;QACxBA,GAAG,EAAEA,GAAG,GAAG;MADa,CAAZ;IAAA,CAAd;EAGD;;EACDJ,MAAM,GAAG;IACP,KAAKK,QAAL,CAAc;MAAA,IAAC;QAACH;MAAD,CAAD;MAAA,OAAsB;QAClCA,aAAa,EAAEA,aAAa,GAAG;MADG,CAAtB;IAAA,CAAd;EAGD;;EAEDM,cAAc,CAACJ,GAAD,EAAM;IAClB;IACA;IACA,OAAOA,GAAG,GAAG,CAAN,KAAY,CAAZ,GAAgB,OAAhB,GAA0B,OAAjC;EACD;;EAGDK,MAAM,GAAG;IACP,MAAM;MAACT,MAAD;MAASH,WAAT;MAAsBE;IAAtB,IAA+B,KAAKE,KAA1C;IAEA,oBACE;MAAA,wBACE;QAAQ,OAAO,EAAE,KAAKJ,WAAtB;QACA,KAAK,EAAE;UAACa,eAAe,EAAE,KAAKF,cAAL,CAAoBX,WAApB;QAAlB,CADP;QAAA,oCAC+EM,MAD/E;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAGE;QAAQ,OAAO,EAAE,KAAKJ,KAAtB;QACA,KAAK,EAAE;UAACW,eAAe,EAAC,KAAKF,cAAL,CAAoBT,KAApB;QAAjB,CADP;QAAA,qCACyEK,GADzE;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAKE;QAAQ,OAAO,EAAE,KAAKJ,MAAtB;QAA8B,KAAK,EAAE;UAACU,eAAe,EAAE,KAAKF,cAAL,CAAoBR,MAApB;QAAlB,CAArC;QAAA,oCAAwGE,aAAxG;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAUD;;AApD+B;;AAuDlC,eAAeR,GAAf"},"metadata":{},"sourceType":"module"}